<%- include('partials/head') %>
    <%- include('partials/navbar') %>

        <div class="grid-containersff">
            <div class="grid-itemsff item1sff">
                <%- include('partials/menu') %>
            </div>
            <div class="grid-itemsff item2sff">
                <div class="container">
                    <div class="search-container">
                        <div class="search-container">
                            <label for="searchDate">Select Date:</label>
                            <input type="date" id="searchDate" class="input-field" placeholder="Select Date">

                            <label for="searchStartTime">Select Start Time:</label>
                            <input type="time" id="searchStartTime" class="input-field" placeholder="Select Start Time">

                            <label for="searchEndTime">Select End Time:</label>
                            <input type="time" id="searchEndTime" class="input-field" placeholder="Select End Time">

                            <button onclick="searchData()">Search</button>
                            <button onclick="deleteAll()">Delete All</button>

                        </div>
                    </div>
                    <div class="table-container">
                        <table>
                            <thead>
                                <tr>
                                    <th>Seq No</th>
                                    <th>ID Part No</th>
                                    <th>Quantity</th>
                                    <th>Stock in Time</th>
                                    <th>Stock out Time</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="dataRows">
                                <% data.forEach(item=> { %>
                                    <tr>
                                        <td>
                                            <%= item.id %>
                                        </td>
                                        <td>
                                            <%= item.id_part_no_core_6 %>
                                        </td>
                                        <td>
                                            <%= item.quantity %>
                                        </td>
                                        <td>
                                            <%= new Date(item.timestamp).toLocaleString('en-GB', {
                                                timeZone: 'Asia/Bangkok' }) %>
                                        </td>
                                        <td>
                                            <%= item.out %>
                                        </td>
                                        <td>
                                            <button class="edit"
                                                onclick="openEditModal('<%= item.id %>', '<%= item.id_part_no_core_6.replace(/\r/g, '') %>', <%= item.quantity %>)">
                                                <i class="fa fa-edit" style="font-size:36px"></i>Edit
                                            </button>
                                            <button class="del" onclick="deletePart('<%= item.id %>')">
                                                <i class="fa fa-trash-o" style="font-size:36px"></i>Delete
                                            </button>
                                        </td>
                                    </tr>
                                    <% }) %>
                            </tbody>
                        </table>

                        <div id="editModal" class="modal">
                            <div class="modal-content">
                                <span class="close-btn" onclick="closeEditModal()">&times;</span>
                                <h2>Edit Part</h2>
                                <form id="editForm">
                                    <input type="hidden" id="editId">
                                    <label for="editPartNo">Part No:</label>
                                    <input type="text" id="editPartNo" class="input-field">
                                    <label for="editQty">Quantity:</label>
                                    <input type="number" id="editQty" class="input-field">
                                    <div class="button-group">
                                        <button type="button" class="close-btn-alt" onclick="closeEditModal()"><i
                                                class="fa fa-arrow-circle-left"
                                                style="font-size:24px"></i>Close</button>
                                        <button type="submit" class="save-btn"><i class="fa fa-save"
                                                style="font-size:24px;"></i>Save</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <link rel="stylesheet" href="/styles.css">
            <link rel="stylesheet" href="/css/ss.css">

            <script>
                const table = 'log_data_stock_core_6';
                document.addEventListener("DOMContentLoaded", function () {
                    document.getElementById('editModal').style.display = 'none';
                });

                function openEditModal(id, id_part_no_core_6, quantity) {
                    console.log("Opening modal for ID:", id);
                    document.getElementById('editId').value = id;
                    document.getElementById('editPartNo').value = id_part_no_core_6;
                    document.getElementById('editQty').value = quantity;
                    document.getElementById('editModal').style.display = 'flex';
                }


                function closeEditModal() {
                    document.getElementById('editModal').style.display = 'none';
                }

                document.getElementById('editForm').addEventListener('submit', async function (event) {
                    event.preventDefault();
                    const id = document.getElementById('editId').value;
                    const partNo = document.getElementById('editPartNo').value;
                    const qty = document.getElementById('editQty').value;

                    const response = await fetch(`/api/edit1/${id}?table=${table}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ part_no: partNo, qty })
                    });

                    if (!response.ok) {
                        alert("Error updating part. Please try again.");
                    } else {
                        const result = await response.json();
                        alert(result.message);
                        closeEditModal();
                        location.reload();
                    }
                });

                async function searchData() {
                    const searchDate = document.getElementById('searchDate').value;
                    const searchStartTime = document.getElementById('searchStartTime').value;
                    const searchEndTime = document.getElementById('searchEndTime').value;

                    if (!searchDate || !searchStartTime || !searchEndTime) {
                        alert("Please select date and both start and end times");
                        return;
                    }

                    const queryParams = [];
                    if (searchDate) queryParams.push(`date=${encodeURIComponent(searchDate)}`);
                    if (searchStartTime) queryParams.push(`start_time=${encodeURIComponent(searchStartTime)}`);
                    if (searchEndTime) queryParams.push(`end_time=${encodeURIComponent(searchEndTime)}`);

                    const queryString = queryParams.join('&');
                    console.log(searchDate, searchStartTime, searchEndTime);

                    try {

                        const response = await fetch(`http://192.168.100.100:3000/search?${queryString}&table=${table}`, {

                            method: 'GET',
                            headers: { 'Content-Type': 'application/json' }
                        });

                        const data = await response.json();

                        if (response.ok) {
                            updateTable(data);
                        } else {
                            alert('No data found.');
                        }
                    } catch (error) {
                        console.error('Error fetching data:', error);
                        alert('An error occurred. Please try again.');
                    }
                }



                function updateTable(data) {
                    const tableBody = document.querySelector('#dataRows');
                    tableBody.innerHTML = '';

                    data.forEach(item => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                        <td>${item.id}</td>
                        <td>${item.id_part_no_core_6}</td>
                        <td>${item.quantity}</td>
                        <td>${item.timestamp}</td>
                        <td>${item.out}</td>
                        <td>
                            <button class="edit" data-id="${item.id}" data-part-no="${item.id_part_no_core_6}" data-quantity="${item.quantity}">
                                <i class="fa fa-edit" style="font-size:36px"></i>Edit
                            </button>
                            <button class="del" data-id="${item.id}">
                                <i class="fa fa-trash-o" style="font-size:36px"></i>Delete
                            </button>
                        </td>
                    `;
                        tableBody.appendChild(row);
                    });


                    tableBody.addEventListener('click', function (event) {
                        if (event.target.closest('.edit')) {
                            const btn = event.target.closest('.edit');
                            const id = btn.getAttribute('data-id');
                            const partNo = btn.getAttribute('data-part-no');
                            const quantity = btn.getAttribute('data-quantity');
                            openEditModal(id, partNo, quantity);
                        }
                        if (event.target.closest('.del')) {
                            const btn = event.target.closest('.del');
                            const id = btn.getAttribute('data-id');
                            deletePart(id);
                        }
                    });
                }
                async function deleteAll() {
                    if (confirm("Are you sure you want to delete all parts?")) {
                        try {
                            const response = await fetch(`http://192.168.100.100:3000/delete-all?table=${table}`, {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' }
                            });

                            if (!response.ok) {
                                const errorData = await response.json();
                                alert(errorData.message);
                            } else {
                                const result = await response.json();
                                alert(result.message);
                                location.reload();
                            }
                        } catch (error) {
                            alert("An error occurred. Please try again.");
                            console.error(error);
                        }
                    }
                }





                async function deletePart(id) {
                    if (confirm("Are you sure you want to delete this item?")) {
                        try {
                            const response = await fetch(`http://192.168.100.100:3000/delete/${id}?table=${table}`, {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' }
                            });

                            if (!response.ok) {
                                const errorData = await response.json();
                                alert(errorData.message);
                            } else {
                                const result = await response.json();
                                alert(result.message);
                                location.reload();
                            }
                        } catch (error) {
                            alert("An error occurred. Please try again.");
                        }
                    }
                }
            </script>

            </body>

            </html>